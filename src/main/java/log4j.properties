#Loga tudo
#jdbc:postgresql://174.142.48.81:5432/financeiro
#jdbc:postgresql://localhost:5432/financeiro
#log4j.rootLogger= debug, stdout
#Por pacotes
log4j.logger.com.filipenevola.dao= debug, stdout, R, ERROS
log4j.logger.com.filipenevola.model= debug, stdout, R, ERROS
log4j.logger.com.filipenevola.service= debug, stdout, R, ERROS
log4j.logger.com.filipenevola.util= debug, stdout, R, ERROS
log4j.logger.com.filipenevola.web= debug, stdout, R, ERROS

#console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy/MM/dd @ HH:mm:ss} - %rms][%-5p][by %t](in %c{3}:%L): %m%n

#arquivo at\u00E9 10000kb com 3 backups
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=log/log.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[%d{yyyy/MM/dd @ HH:mm:ss} - %r] %-5p [%t] (%c{3}:%L) %x - %m%n
log4j.appender.R.MaxFileSize=10000KB
log4j.appender.R.MaxBackupIndex=3

#arquivo at\u00E9 10000kb com 3 backups
log4j.appender.ERROS=org.apache.log4j.RollingFileAppender
log4j.appender.ERROS.File=log/erros.log
log4j.appender.ERROS.layout=org.apache.log4j.PatternLayout
log4j.appender.ERROS.layout.ConversionPattern=[%d{yyyy/MM/dd @ HH:mm:ss} - %r] %-5p [%t] (%c{3}:%L) %x - %m%n
log4j.appender.ERROS.threshold=error
log4j.appender.ERROS.MaxFileSize=10000KB
log4j.appender.ERROS.MaxBackupIndex=3

#arquivo por semana, sem limite de tamanho
#log4j.appender.week=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.week.File=log/logWeek.log
#log4j.appender.week.DatePattern='.'yyyy-ww
#log4j.appender.week.layout=org.apache.log4j.PatternLayout
#log4j.appender.week.layout.ConversionPattern=[%d{yyyy/MM/dd @ HH:mm:ss} - %r] %-5p [%t] (%c{3}:%L) %x - %m%n


#Envio para EMAIL: http://hotwork.sourceforge.net/hotwork/manual/log4j/log4j-user-guide.html
#SMTPAppender - logs via e-mail
#
#Com Log4j \u00E9 poss\u00EDvel enviar os logs facilmente para um destinat\u00E1rio de e-mail, usando o appender org.apache.log4j.net.SMTPAppender
#
#Como o SMTPAppender usa a JavaMail API da Sun (http://java.sun.com/products/javamail), \u00E9 necess\u00E1rio utilizar o JavaBeans Activation Framework (http://java.sun.com/beans/glasgow/jaf.html) atrav\u00E9s do arquivo activation.jar, e o pacote javax.mail que pode ser encontrado no arquivo mail.jar da Sun. Estes dois arquivos devem ser colocados no CLASSPATH da aplica\u00E7\u00E3o.
#
#Da\u00ED ent\u00E3o, s\u00F3 \u00E9 preciso fazer a devida configura\u00E7\u00E3o assim como qualquer outro appender:
#log4j.rootCategory=DEBUG, emailOut
#
#!-------------------- Enviando por e-mail -------------------!
#
#log4j.appender.emailOut=org.apache.log4j.net.SMTPAppender
#log4j.appender.emailOut.Threshold=DEBUG
#
#log4j.appender.emailOut.SMTPHost=<seu servidor smtp>
#log4j.appender.emailOut.From=<seu e-mail>
#
#log4j.appender.emailOut.BufferSize=2
#log4j.appender.emailOut.Subject=<assunto>
#
#log4j.appender.emailOut.To=<destinatario>
#log4j.appender.emailOut.layout=org.apache.log4j.PatternLayout
#log4j.appender.emailOut.layout.ConversionPattern=%d{ISO8601} %5p [%t](%F:%L)- %m%n
#O e-mail enviado conter\u00E1 exatamente as mensagens de log como aparecem no console por exemplo, seguindo o pattern escolhido pelo desenvolvedor.